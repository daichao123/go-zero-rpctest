// Code generated by goctl. DO NOT EDIT!
// Source: wallet.proto

package wallet

import (
	"context"

	"go-zero-rpctest/wallet/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CoinIdRequest  = pb.CoinIdRequest
	WalletResponse = pb.WalletResponse

	Wallet interface {
		GetCoinInfo(ctx context.Context, in *CoinIdRequest, opts ...grpc.CallOption) (*WalletResponse, error)
	}

	defaultWallet struct {
		cli zrpc.Client
	}
)

func NewWallet(cli zrpc.Client) Wallet {
	return &defaultWallet{
		cli: cli,
	}
}

func (m *defaultWallet) GetCoinInfo(ctx context.Context, in *CoinIdRequest, opts ...grpc.CallOption) (*WalletResponse, error) {
	client := pb.NewWalletClient(m.cli.Conn())
	return client.GetCoinInfo(ctx, in, opts...)
}
